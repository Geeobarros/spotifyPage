/*HEADER*/

.main-container{
    max-width: 80vw;
    height: 100vh;
    margin-left: 320px;
    margin-right: 56px;
    
}

/* DISPLAY * TOTAL e vamos passar rapidamente por cada um deles
block: Um elemento com display: block sempre inicia em uma nova linha e ocupa toda a largura disponível.
Ele empilha verticalmente um sobre o outro.

inline: Um elemento com display: inline não inicia em uma nova linha e apenas ocupa o espaço necessário para o conteúdo.
Elementos inline não aceitam largura (width) e altura (height).

inline-block: Um elemento com display: inline-block combina características de elementos inline e block.
Ele não inicia uma nova linha e permite a definição de largura e altura.

flex: A propriedade display: flex é usada para criar um contêiner flexível.
Os itens dentro do contêiner flexível podem ser ajustados em termos de tamanho, ordem e alinhamento.

grid: A propriedade display: grid é usada para criar um contêiner de layout em grade.
Permite definir um layout bidimensional com linhas e colunas, facilitando o posicionamento de elementos.

inline-flex:Similar ao flex, mas o contêiner flexível é tratado como um elemento inline.

table, table-row, table-cell: Esses valores de display são usados para criar layouts semelhantes a tabelas.

none: Um elemento com display: none é completamente removido do fluxo de layout e não é renderizado na tela.
*/

.header__navigation{
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 16px;
    margin: 10px;
    border-radius: 8px;
    background-color: #121212;
}

.header__navigation .navigation{
    display: flex;
    justify-content: space-around;
    align-items: center;
}

.header__navigation .navigation .arrow-left{
    margin-right: 1.25rem;
}

.arrow-left, .arrow-right{
    display: flex;
    align-items: center;
    justify-content: center;
    width: 32px;
    height: 32px;
    background: var(--bg-icon);
    background-color: var(--bg-arrow-color);
    border-radius: 50%;
    border: none;
    cursor: pointer;
}

.header__login{
    display: flex;
    align-items: center;
}

.header__search{
    display: flex;
    align-items: center;
    width: 364px;
    height: 48px;
    margin-left: 8px;
    background-color: #242424;
    border-radius: 500px;
    border: 1px solid transparent;
}

.header__search img{
    width: 16px;
    height: 16px;
    margin-left: 10px;
}

.header__search input{
    background: transparent;
    border: none;
    padding: 0px 100px 0px 12px;
    color: #fff;
    text-overflow: ellipsis ;
    overflow: 0;
    white-space: nowrap; /*DEIXAR O TEXTO NUMA LINHA SÓ*/
    outline: none;
}

.header__login .subs {
    color: var(--text-sub);
    font-size: 16px;
    font-weight: 700;
    background-color: transparent;
    margin-right: 32px;
    border: 0px;
    white-space: nowrap;
        
}


.header__login .login {
    width: 100px;
    height: 48px;
    color: #000;
    font-size: 16px;
    font-weight: 700;
    border-radius: 40px ;
}

/*HOVER*/

.header__search:hover{
    transform: scale(1.04);
    color: var(--text-base-light);
}

.header__login .subs:hover{
    transform: scale(1.04);
    color: var(--text-base-light);
}

.header__login .login:hover{
    transform: scale(1.04);
}

/* fim header e hover*/

/*PLAYLIST*/
.playlist-container{
    height: 68vh;
    padding-top: 16px;
    margin: 10px;
    border-radius: 10px;
    background-color: #121212;
}

.playlist{
    margin: 24px;
}

.playlist #greeting {
    color: var(--text-base-light);
    font-size: 32px;
    font-weight: 700;
    margin-bottom: 48px;
}

.playlist .session{
    color: var(--text-base-light);
    font-size: 24px;
    font-weight: 700;
}


/*SCROLL*/

.offer__scroll-container {
    max-height: 43vh;
    margin: 24px;
    overflow-y: auto;
}

.offer__scroll-container::-webkit-scrollbar{
    width: 1px;
} 

.offer__scroll-container::-webkit-scrollbar-thumb{
    background-color: transparent;
}

/*FIM SCROLL */ 

.offer__list-item {
    display: grid;  /*Divide o conteudo em grades, lembra o flex*/
    justify-items: center;
    grid-template-columns: 1fr 1fr 1fr 1fr 1fr; /*qtde de cards que vai estar por linha*/
    grid-gap: 16px; /*NÃO É USADO MAIS*/
    gap: 16px;  /* espaço entre os cards*/
    margin-bottom: 16px;
    margin: 0 auto;
}



.cards{
    position: relative; /* relative:
    Comportamento em relação a si mesmo: O elemento é posicionado em relação à sua posição original.
    Mantém espaço original: O espaço original que o elemento ocuparia não é alterado, mas você pode movê-lo com top, right, bottom ou left. */
    width: 220px;
    height: 200px;
    overflow: hidden;
    border-radius: 8px;
}

.cards span{
    padding: 16px;
    position: absolute;
    /* absolute:
    Comportamento em relação ao ancestral posicionado mais próximo ou ao elemento raiz (se nenhum ancestral estiver posicionado).
    Remove do fluxo normal: O elemento é removido do fluxo normal do documento, o que significa que outros elementos agem como se o elemento não estivesse presente. */

    color: var(--text-base-light);
    font-size: 24px;
    font-weight: 700;
}

/*COLOR CARDS*/
.card1{
    background-color: var(--card1);
}

.card2{
    background-color: var(--card2);
}

.card3{
    background-color: var(--card3);
}

.card4{
    background-color: var(--card4);
}

.card5{
    background-color: var(--card5);
}

.card6{
    background-color: var(--card6);
}

.card7{
    background-color: var(--card7);
}

.card8{
    background-color: var(--card8);
}

.card9{
    background-color: var(--card9);
}

.card10{
    background-color: var(--card10);
}

.card11{
    background-color: var(--card11);
}

.card12{
    background-color: var(--card12);
}

.card13{
    background-color: var(--card13);
}

.card14{
    background-color: var(--card14);
}

.card15{
    background-color: var(--card15);
}

/*FIM CARDS*/

.offer__list-item img{
    position: absolute;
    right: 0;
    bottom: 0;
    height: auto;
    width: 107px;
    transform: rotate(25deg) translate(18%, -2%);
}

/*CARD ARTISTA*/

.artist{
    --column-count: 5;
    --grid-gap: 24px;
    --min-container-width: 372px;
}

.hidden{
    display: none;
}

.grid-container{
    grid-gap: var(--grid-gap);
    display: grid;
    grid-template-columns: repeat(var(--column-count), minmax(0, 1fr));
    min-width: var(--min-container-width);
}

.artist-card{
    background: #181818;
    border-radius: 8px;
    -ms-flex: 1;
    flex: 1;
    isolation: isolate;
    padding: 16px;
    position: relative;
    transition: background-color 0.3s ease;
    width: 100%;
}

.artist-card:hover{
    background-color: #252525;
}

.card-img{
    padding-bottom: 100%;
    position: relative;
    width: 100%;
    margin-bottom: 16px;
}

.artist-img{
    height: 100%;
    left: 0;
    position: absolute;
    top: 0;
    width: 100%;
    border-radius: 50%;
}

.card-text{
    display: flex;
    flex-direction: column;
    color: #fff;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    min-height: 62px;
}

.card-text a{
    display: inline-block;
    max-width: 100%;
    vertical-align: middle;
}

.artist-name{
    box-sizing: border-box;
    margin-block: 0px;
    font-size: 16px;
    font-weight: 700;
    padding-block-end: 8px;
}

.artist-categorie{
    color: #6a6a6a;
    font-weight: 400;
    font-size: 0.875rem;
}

.play{
    position: relative;
}

.play .fa-play{
    position: absolute;
    right: 10px;
    top: 120px;
    padding: 18px;
    background-color: #1db954;
    border-radius: 100%;
    font-size: 14px;
    opacity: 0;
    transition: all ease 0.4s;
}

.artist-card:hover .play .fa-play{
    opacity: 1;
    transform: translate(-20px);
}

.play .fa-play:hover{
    padding: 20px;
    cursor: pointer;
}

#result-artist{
    padding: 20px 40px;
}



